buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'application'
apply plugin: 'docker'

// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

mainClassName = 'co.runrightfast.vertx.demo.VertxApp'

applicationDefaultJvmArgs = [    
    // enable remote debugging
    "-Xdebug",
    "-Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=n",
    
    "-Dcom.sun.management.jmxremote.authenticate=false",
    "-Dcom.sun.management.jmxremote.ssl=false",
    "-Dcom.sun.management.jmxremote.port=7410",
    
    "-Dapp.log.dir=${buildDir}/app/logs",   
    "-Drunrightfast.app.version=${version}"
]

dependencies {
   compile project(':runrightfast-vertx-core')
}


docker {
    maintainer = 'Alfio Zappala <alfio.a.z.2@gamil.com>'
    // OpenJDK
    //baseImage = 'java:8u45-jre'
    
    // Oracle JDKs
    baseImage = 'andreptb/oracle-java:8'
    // baseImage = 'isuper/java-oracle:jre_8'
}

task appDocker(type: Docker) {
    dependsOn installDist
    project.group = "runrightfast"
    applicationName = "${project.name}"
    entryPoint(["/runrightfast/apps/${project.name}/bin/${project.name}"])
    exposePort 7410
    exposePort 4000
    addFile("${buildDir}/install/${project.name}", "/runrightfast/apps/${project.name}")
}
