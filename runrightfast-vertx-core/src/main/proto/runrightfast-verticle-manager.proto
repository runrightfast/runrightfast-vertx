syntax = "proto3";

package co.runrightfast.vertx.core.verticles.verticleManager.messages;

option java_generate_equals_and_hash = true;
option java_string_check_utf8 = true;
option java_multiple_files = true;

import "runrightfast-vertx.proto";

// returns list of managed verticle deployments
message GetVerticleDeployments {

    message Request {
        // below are filters used to filter out what is returned, if no filters are specified, then all deployments are returned
        repeated co.runrightfast.vertx.core.verticles.messages.VerticleId verticle_ids = 1;
        repeated string groups = 2;
        repeated string names = 3;
    }

    message Response {
        repeated VerticleDeployment deployments = 1;
    }

}

message RunVerticleHealthChecks {
    message Request {
        // below are filters used to filter out what health checks are run
        // if no filters are specified, then all healthchecks run
        repeated co.runrightfast.vertx.core.verticles.messages.VerticleId verticle_ids = 1;
        repeated string groups = 2;
        repeated string names = 3;
    }

    message Response {
        repeated HealthCheckResult results = 1;
    }
}

message VerticleDeployment {
    string verticle_class = 1;

    co.runrightfast.vertx.core.verticles.messages.VerticleId verticle_id = 2;  

    DeploymentOptions deployment_options = 3;

    repeated HealthCheck health_checks = 4;
}

message DeploymentOptions {
    VerticleType verticle_type = 1;

    int32 instances = 2;

    string config_json = 3;

    bool ha = 4;

    string isolation_group = 5;

    repeated string isolated_classes = 6;
    
    repeated string extra_classpath = 7;
}

enum VerticleType {
    STANDARD = 0;

    WORKER = 1;

    MULTITHREADED = 2;
}

message HealthCheck {

    enum FailureSeverity {
        LOW = 0;
        MEDIUM = 1;
        HIGH = 2;
        FATAL = 3;
    }

    co.runrightfast.vertx.core.verticles.messages.VerticleId verticle_id = 1;

    string health_check_name = 2;

    string health_check_class = 3;

    FailureSeverity failure_severity = 4;

    repeated string tags = 5;
}

message HealthCheckResult {
    co.runrightfast.vertx.core.verticles.messages.VerticleId verticle_id = 1;

    string health_check_name = 2;

    bool healthy = 3;

    string message = 4;
}

